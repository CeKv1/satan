# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2009-03-10 22:07+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: ENCODING"

# type: Content of: <sect1><title>
#: xml/chapters/basics.xml:7
msgid "The basics"
msgstr ""

# type: Content of: <sect1><para>
#: xml/chapters/basics.xml:9
msgid ""
"This chapter contains a brief overview of the build process as well as "
"containing instructions on how to boot the various binary image types."
msgstr ""

# type: Content of: <sect1><section><title>
#: xml/chapters/basics.xml:12
msgid "What is a live system?"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:14
msgid ""
"A live system usually means an OS booted on a computer from a removable "
"support (as CD-ROM, USB stick, or network), ready to use without any "
"installation on the usual drive(s), with an auto-configuration done at "
"runtime (see <xref linkend=\"terms\"/>)."
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:16
msgid ""
"With Debian Live, it's a Debian GNU/Linux OS, built for one of the supported "
"architectures (currently amd64, i386, powerpc and sparc). It is made from "
"following parts:"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><term>
#: xml/chapters/basics.xml:20
msgid "Linux kernel"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:21
msgid "The Linux image, usually named <filename>vmlinuz*</filename>."
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><term>
#: xml/chapters/basics.xml:25
msgid "Initial RAM disk image (initrd)"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:26
msgid ""
"RAM disk setup for the Linux boot, containing modules possibly need to mount "
"the filesystem's image and some scripts to do it."
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><term>
#: xml/chapters/basics.xml:30
msgid "System image"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:31
msgid ""
"The O.S. image. Debian Live uses a SquashFS image, a compressed filesystem, "
"to minimize its size. Note that it's read-only, so during boot, the Debian "
"Live system will uses RAM disk and 'union' mechanism to be able to write "
"files on the system, but all modifications will be lost when shutdown, until "
"using optional persistence partition(s) (see <xref linkend=\"persistence\"/"
">)."
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><term>
#: xml/chapters/basics.xml:35
msgid "Bootloader"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:36
msgid ""
"A small piece of code, crafted to boot up from the chosen media, possibly "
"proposing a prompt or menu to let select options/configuration, then loading "
"the Linux kernel and its initrd to let it run with associated filesystem "
"image. Different solutions can be proposed depending of the target media and "
"fornat of filesystem containing the previous components: Isolinux to boot "
"from a CD or DVD in ISO9660 format, syslinux for HDD or USB drive boot from "
"a VFAT partition, GRUB for ext2/3 partition, pxelinux for PXE netboot..."
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:41
msgid ""
"The Debian Live tools will build the system image from your specifications, "
"setup a Linux kernel and its initrd, a bootloader to run them, all in one "
"media-dependant format(ISO9660 image, disk image, ...)."
msgstr ""

# type: Content of: <sect1><section><title>
#: xml/chapters/basics.xml:45
msgid "First steps: building an ISO image"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:47
msgid ""
"The following sequence of helper commands, provided by &live-helper;, will "
"create a basic ISO image containing just the Debian standard system without "
"X.org. It is suitable for burning to CD or DVD media."
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:48
msgid ""
"First, we run the <filename>lh_config</filename> helper command which will "
"create a <filename>\"config/\"</filename> hierarchy in the current directory "
"for use by other helper commands:"
msgstr ""

# type: Content of: <sect1><section><screen>
#: xml/chapters/basics.xml:49
#, no-wrap
msgid "$ lh_config"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:50
msgid ""
"By passing no parameters to <filename>lh_config</filename>, we indicated "
"that we wish to use the defaults, which will create an image of type binary "
"(see <xref linkend=\"lh_config\"/>)."
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:51
msgid ""
"Now that we have a <filename>\"config/\"</filename> hierarchy, we may build "
"the image with <filename>lh_build</filename> helper command:"
msgstr ""

# type: Content of: <sect1><section><screen>
#: xml/chapters/basics.xml:52 xml/chapters/basics.xml:85
#: xml/chapters/basics.xml:115
#, no-wrap
msgid "# lh_build"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:53
msgid ""
"This process can take a while, depending on the speed of your network "
"connection (see <xref linkend=\"lh_build\"/>)."
msgstr ""

# type: Content of: <sect1><section><section><title>
#: xml/chapters/basics.xml:56
msgid "Testing an ISO image with Qemu"
msgstr ""

# type: Content of: <sect1><section><section><para>
#: xml/chapters/basics.xml:58
msgid "Testing an ISO is simple:"
msgstr ""

# type: Content of: <sect1><section><section><screen>
#: xml/chapters/basics.xml:59
#, no-wrap
msgid ""
"\n"
"# apt-get install qemu\n"
"$ qemu -cdrom binary.iso\n"
msgstr ""

# type: Content of: <sect1><section><section><title>
#: xml/chapters/basics.xml:66
msgid "Burning an ISO image to physical medium"
msgstr ""

# type: Content of: <sect1><section><section><para>
#: xml/chapters/basics.xml:68
msgid "Burning an ISO image is easy:"
msgstr ""

# type: Content of: <sect1><section><section><screen>
#: xml/chapters/basics.xml:69
#, no-wrap
msgid ""
"\n"
"# apt-get install wodim\n"
"$ wodim binary.iso\n"
msgstr ""

# type: Content of: <sect1><section><title>
#: xml/chapters/basics.xml:77
msgid "Building an USB/HDD image"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:79
msgid ""
"The following sequence of helper commands will create a basic USB/HDD image "
"containing just the Debian standard system without X.org. It is suitable for "
"booting from USB sticks, USB hard drives, and various other portable storage "
"devices."
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:80
msgid ""
"Note if you created an iso image with the previous example, you will need to "
"clean up your working directory with the <filename>lh_clean</filename> "
"helper command (see <xref linkend=\"lh_clean\"/>):"
msgstr ""

# type: Content of: <sect1><section><screen>
#: xml/chapters/basics.xml:81 xml/chapters/basics.xml:110
#, no-wrap
msgid "$ lh_clean --binary"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:82
msgid ""
"Run the <filename>lh_config</filename> helper command with the parameters to "
"configure the <filename>\"config/\"</filename> hierarchy to create a USD/HDD "
"image type:"
msgstr ""

# type: Content of: <sect1><section><screen>
#: xml/chapters/basics.xml:83
#, no-wrap
msgid "$ lh_config -b usb-hdd"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:84 xml/chapters/basics.xml:114
msgid "Now build the image with <filename>lh_build</filename> helper command:"
msgstr ""

# type: Content of: <sect1><section><section><title>
#: xml/chapters/basics.xml:88
msgid "Copying USB/HDD image to a USB stick"
msgstr ""

# type: Content of: <sect1><section><section><para>
#: xml/chapters/basics.xml:90
msgid "The generated binary image contains a"
msgstr ""

# type: Content of: <sect1><section><section><para><acronym>
#: xml/chapters/basics.xml:90
msgid "VFAT"
msgstr ""

# type: Content of: <sect1><section><section><para>
#: xml/chapters/basics.xml:90
msgid ""
"partition and the <command>syslinux</command> bootloader, ready to be "
"directly written on an USB stick. Plug in an USB stick with a size larger "
"than <filename>binary.img</filename>'s one, and type:"
msgstr ""

# type: Content of: <sect1><section><section><para><screen>
#: xml/chapters/basics.xml:91
#, no-wrap
msgid "$ dd if=binary.img of=${USBSTICK}"
msgstr ""

# type: Content of: <sect1><section><section><para>
#: xml/chapters/basics.xml:92
msgid ""
"where <replaceable>${USBSTICK}</replaceable> is the device file of your key, "
"like <filename>/dev/sda</filename> (not a partition like <filename>/dev/"
"sda1</filename>!); you can find the right device name by looking in "
"<command>dmesg</command>'s output after plugging the stick, for example)."
msgstr ""

# type: Content of: <sect1><section><section><title>
#: xml/chapters/basics.xml:97
msgid "Testing a USB/HDD image with Qemu"
msgstr ""

# type: Content of: <sect1><section><section><screen>
#: xml/chapters/basics.xml:98
#, no-wrap
msgid ""
"\n"
"# apt-get install qemu\n"
"$ qemu -hda binary.img\n"
msgstr ""

# type: Content of: <sect1><section><title>
#: xml/chapters/basics.xml:106
msgid "Building a netboot image"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:108
msgid ""
"The following sequence of helper commands will create a basic netboot image "
"containing the Debian standard system without X.org. It is suitable for "
"booting over the network."
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:109
msgid ""
"Note if you performed any previous examples, you will need to clean up your "
"working directory with the <filename>lh_clean</filename> helper command:"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:111
msgid ""
"Run the <filename>lh_config</filename> helper command with the parameters to "
"configure the <filename>\"config/\"</filename> hierarchy to create our "
"netboot image:"
msgstr ""

# type: Content of: <sect1><section><screen>
#: xml/chapters/basics.xml:112
#, no-wrap
msgid "$ lh_config -b net --net-root-path \"/srv/debian-live\" --net-root-server \"192.168.0.1\""
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:113
msgid ""
"In contrast with the ISO and USB hdd images, netbooting does not support "
"serving a filesystem image with the client so the files must be served via "
"NFS. The <replaceable>net-root-path</replaceable> and <replaceable>net-root-"
"server</replaceable> options specify the location and server respectfully of "
"the NFS server where the filesytem image will be located at boot-time."
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:116
msgid ""
"In a network boot, the client runs a small piece of software, usually on the"
msgstr ""

# type: Content of: <sect1><section><para><acronym>
#: xml/chapters/basics.xml:116
msgid "EEPROM"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:116
msgid "of the Ethernet card, which sends a"
msgstr ""

# type: Content of: <sect1><section><para><abbrev>
#: xml/chapters/basics.xml:116
msgid "DHCP"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:116
msgid "request to get an"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para><abbrev>
#: xml/chapters/basics.xml:116 xml/chapters/basics.xml:124
msgid "IP"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:116
msgid ""
"address and also information about what to do next; such as getting (through"
msgstr ""

# type: Content of: <sect1><section><para><abbrev>
#: xml/chapters/basics.xml:116
msgid "TFTP"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:116
msgid ""
"protocol) a higher level boot software like <application>Grub</application> "
"or <application>PXLINUX</application>, or directly to an operating system "
"like <application>Linux</application>."
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:117
msgid ""
"For example, you can extract the generated <filename>binary-net.tar.gz</"
"filename> archive in the <filename>/srv/debian-live</filename> directory; "
"you'll get the filesystem image in <filename>live/filesystem.squashfs</"
"filename>, the kernel, initrd and PXE Linux bootloader in <filename>tftpboot/"
"debian-live/i386</filename>."
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:118
msgid "We must now configure three services on the server:"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><term>
#: xml/chapters/basics.xml:122
msgid "DHCP server"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:124
msgid "We must configure our network's DHCP server to be sure to give a"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:124
msgid ""
"address to the computer netbooting, and to advertise the location of the PXE "
"bootloader."
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:125
msgid ""
"Here is an example for inspiration, written for the ISC DHCP server (package "
"<literal>dhcp3-server</literal>) in the <filename>/etc/dhcp3/dhcpd.conf</"
"filename> configuration file :"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><screen>
#: xml/chapters/basics.xml:126
#, no-wrap
msgid ""
"\n"
"# Options DHCP spécifiques à Pxelinux:\n"
"option space pxelinux;\n"
"option pxelinux.magic      code 208 = string;\n"
"option pxelinux.configfile code 209 = text;\n"
"option pxelinux.pathprefix code 210 = text;\n"
"option pxelinux.reboottime code 211 = unsigned integer 32;\n"
"\n"
"\n"
"subnet 192.168.1.0 netmask 255.255.255.0 {   # 192.168.1.0/24\n"
"\n"
"  # IP addresses available for guests\n"
"  range 192.168.1.100 192.168.1.149;\n"
"\n"
"  # allow booting from the net\n"
"  allow bootp;\n"
"\n"
"  # for net booting, server where the first file to be loaded (by TFTP\n"
"  # protocol) (\"filename\" following definition) lies : so the TFTP\n"
"  # server's name.\n"
"  next-server myserver;\n"
"\n"
"  # net boot configuration for guests with a PXE client :\n"
"  if substring (option vendor-class-identifier, 0, 9) = \"PXEClient\" {\n"
"    # Note : all files for PXE are relatives to the TFTP server's root\n"
"    # path, as usually defined in /etc/inetd.conf.\n"
"\n"
"    # PXE boot loader (first program to be loaded, by TFTP)\n"
"    filename \"pxelinux.0\";\n"
"\n"
"    # describe some specific pxelinux's options through DHCP options :\n"
"    site-option-space \"pxelinux\";\n"
"    option pxelinux.magic f1:00:74:7e;\n"
"    if exists dhcp-parameter-request-list {\n"
"      # Always send the PXELINUX options (specified in hexadecimal)\n"
"      option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list,d0,d1,d2,d3);\n"
"    }\n"
"\n"
"    # For a PXE boot menu, different versions are available : simple\n"
"    # text, text with curses, graphic (VESA)\n"
"    #option pxelinux.configfile \"pxelinux/config_simple\";\n"
"    #option pxelinux.configfile \"pxelinux/config_curses\";\n"
"    option pxelinux.configfile \"pxelinux/config_vesa\";\n"
"\n"
"    # automatically reboot after 10 minutes of no activity\n"
"    option pxelinux.reboottime 600;\n"
"  }\n"
"}\n"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><term>
#: xml/chapters/basics.xml:179
msgid "TFTPd server"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:181
msgid "This serves the kernel and initial ramdisk to the system at run-time."
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:182
msgid ""
"You should install the <command>tftpd-hpa</command> package. It can serve "
"all files contained inside a root directory, usually <filename>/var/lib/"
"tftpboot/</filename>, as defined with its"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para><option>
#: xml/chapters/basics.xml:182
msgid "-s"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:182
msgid ""
"option. To let it serves files inside <filename>/srv/debian-live/tftpboot</"
"filename>, modify its start definition in <filename>/etc/inetd.conf</"
"filename> with:"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para><screen>
#: xml/chapters/basics.xml:183
#, no-wrap
msgid "tftp           dgram   udp     wait    root  /usr/sbin/in.tftpd /usr/sbin/in.tftpd -s /srv/debian-live/tftpboot -r blksize -v -v"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:184
msgid ""
"and reload the super server with <command>/etc/init.d/openbsd-inetd reload</"
"command>."
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><term>
#: xml/chapters/basics.xml:189
msgid "NFS server"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:191
msgid ""
"Once the guest computer will have downloaded and booted a Linux kernel and "
"its initrd, it will try to mount the Live filesystem image through a NFS "
"server."
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:192
msgid ""
"You should install the <command>nfs-kernel-server</command> server package "
"-- <command>nfs-user-server</command> does not function correctly with "
"netboot."
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:193
msgid ""
"Then, declare that the directory of the filesystem image is available "
"through NFS, by writing in <filename>/etc/exports</filename> :"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><screen>
#: xml/chapters/basics.xml:194
#, no-wrap
msgid "/srv/debian-live *(ro,async,subtree_check,no_root_squash)"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><para>
#: xml/chapters/basics.xml:195
msgid "and let the NFS server knowing it typing following command :"
msgstr ""

# type: Content of: <sect1><section><variablelist><varlistentry><listitem><screen>
#: xml/chapters/basics.xml:196
#, no-wrap
msgid "# exportfs -rv"
msgstr ""

# type: Content of: <sect1><section><para>
#: xml/chapters/basics.xml:202
msgid ""
"Setting all these services is quite error prone, you'll need some patience "
"to let all of them working together."
msgstr ""
