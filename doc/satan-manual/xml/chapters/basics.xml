<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" [
  <!ENTITY % commondata SYSTEM "../entities/common.ent" > %commondata;
]>
<sect1 id="basics">
<title>Les principes</title>

<para>Ce chapitre contient un bref aprçu du processus de création ainsi que des
instructions sur la méthode de démarrage des différents types d'images</para>

<section>
<title>Qu'est-ce qu'un système live</title>

<para>Un système live désigne le plus souvent un Système d'Exploitation démarré
sur une machine depuis un support amovible (comme un CD-ROM, une clef USB,
ou depuis le réseau), prêt à l'emploi sans installation sur le(s) disque(s)
traditionnel, avec une configuration automatique faite  pendant le démarrage
(voir <xref linkend="terms"/>).</para>

<para>Avec Debian Live, c'est un système d'exploitation Debian GNU/Linux,
construit pour l'une des achitectures supportées (actuellement amd64, i386,
powerpc, et sparc). Il est construit à partir des composants suivants:</para>

<variablelist>
<varlistentry>
<term>Noyau Linux</term>
<listitem><para>L'image du noyau Linux, habituellement nommée <filename>vmlinuz*</filename>.</para></listitem>
</varlistentry>

<varlistentry>
<term>Initial RAM disk image (initrd)</term>
<listitem><para>Configuration de la RAM disque pour le démarrage de Linux, contenant les
modules qui pourraient être nécessaire pour monter l'image du système de
fichiers et plusieurs scripts pour le faire</para></listitem>
</varlistentry>

<varlistentry>
<term>L'image du système</term>
<listitem><para>L'image du système d'exploitation Debian Live utilise une image Squashfs, un
système de fichiers compressé, pour diminuer sa taille. Noter qu'il est en
lecture seule, donc pendant la phase de démarrage, le système Debian Live
utilisera la RAM comme un disque et un mechanisme d'union pour pouvoir
écrire des fichiers sur le système, mais toutes les modifitions seront
perdues à l'arrêt de la machine à moins d'utiliser une(des) partition(s)
optionnelle(s) pour la persistence.(voir <xref linkend="persistence"/>).</para></listitem>
</varlistentry>

<varlistentry>
<term>Chargeur de démarrage</term>
<listitem><para>Un petit morceau de code destiné à démarrer depuis le média choisi, il peut
proposer une invite ou un menu pour selectionner des options, une
configuration, puis il doit charger le noyau Linux et son initrd pour
pouvoir utiliser l'image de système de fichiers associée à ce
dernier. Différentes solutions peuvent être proposées, elles dépendent du
média cible et du format du système de fichiers contenant les composants
précédents: Isolinux pour démarrer depuis un CD ou un DVD au format ISO9660,
syslinux pour démarrer depuis les disques durs ou les clefs USB contenant
une partition vfat, GRUB pour les partitions ext2/3, pxelinux pour un
démarrage réseau PXE...</para></listitem>
</varlistentry>

</variablelist>

<para>Les outils de Debian Live construiront l'image du système en fonction de vos
spécifications, configuration du noyau Linux et son initrd, un chargeur de
démarrage pour les exécuter, tout ces composants dependent du format du
media choisi(image ISO9660, image disque, ...).</para>
</section>

<section>
<title>Premiers pas: Construire une image ISO</title>

<para>La séquence suivante de l'assistant de commandes fournit par &live-helper;
créera une image ISO basique contenant uniquement le système Debian standard
sans X.org. Elle peut être gravée sur un CD ou un DVD.</para>
<para>D'abord on exécute la commande <filename>lh_config</filename> de l'assistant
qui créée une arborescence <filename>"config/"</filename> dans le répertoire
courant pour une utilisation ultérieure par d'autres commandes de
l'assistant:</para>
<screen>$ lh_config</screen>
<para>En ne passant aucun paramètres à <filename>lh_config</filename>, on choisit
d'utiliser les paramètres par défauts qui créeront une image de type binaire
(voir <xref linkend="lh_config"/>).</para>
<para>Maintenant que l'on a une arborescence <filename>"config/"</filename>, on
devrait pouvoir construire une image avec la commande
<filename>lh_build</filename> de l'assistant:</para>
<screen># lh_build</screen>
<para>Ce processus peut prendre du temps, en fonction du débit de votre connexion
réseau (voir <xref linkend="lh_build"/>).</para>

<section>
<title>Tester une image ISO avec Qemu</title>

<para>Tester une image ISO est facile</para>
<screen>
# apt-get install qemu
$ qemu -cdrom binary.iso
</screen>
</section>

<section>
<title>Graver une image ISO sur un support physique</title>

<para>Graver une imgae ISO est simple</para>
<screen>
# apt-get install wodim
$ wodim binary.iso
</screen>
</section>
</section>

<section>
<title>Construire une image USB/HDD</title>

<para> La séquence de commandes suivantes de l'assistant créera une image USB/HDD
contenant uniquement le système Debian standard sans X.org. Elle peut être
utilisée pour démarrer depuis une clef USB, une disque dur USB, ainsi que
d'autres types variés de périphériques de stockage amovibles.</para>
<para>Noter que si l'on a créé une image avec l'exemple précédent, on doit
nettoyer le répertoire de travail avec la commande
<filename>lh_clean</filename> de l'assistant (voir <xref
linkend="lh_clean"/>).</para>
<screen>$ lh_clean --binary</screen>
<para>Exécuter la commande <filename>lh_config</filename> de l'assistant avec ces
paramètres pour configurer l'arborescence <filename>"config/"</filename>
afin de créer une image de type USB/HDD:</para>
<screen>$ lh_config -b usb-hdd</screen>
<para>Maintenant construire l'image avec la commande <filename>lh_build</filename>
de l'assistant</para>
<screen># lh_build</screen>

<section>
<title>Copier une image USB/HDD sur une clef USB</title>

<para>L'image binaire générée contient une partition <acronym>VFAT</acronym>  et le chargeur de démarrage <command>syslinux</command>, prêt à être
directement écrit sur une clef USB. Brancher une ckef USB d'une taille
supérieure à celle du fichier <filename>binary.img</filename>, et taper:
<screen>$ dd if=binary.img of=${USBSTICK}</screen>
Où <replaceable>${USBSTICK}</replaceable> est le fichier descripteur de
périphérique de votre clef, comme <filename>/dev/sda</filename> (pas une
partition comme <filename>/dev/sda1</filename>!); on peut trouver le fichier
descripteur de périphérique adéquat en regardant la sortie de la commande
<command>dmesg</command> après avoir branché la clef par exemple)</para>
<important>This will definitely overwrite any previous contents on youro stick!</important>
</section>

<section>
<title>Tester une image USB/HDD avec Qemu</title>
<screen>
# apt-get install qemu
$ qemu -hda binary.img
</screen>
</section>
</section>

<section>
<title>Construire une image démarrable depuis le réseau</title>

<para>La séquence de commandes suivante de l'assistant créera une image basique
pour un démarrage réseau contenant uniquement le système Debian standard
sans X.org. Elle peut être utilisée pour démarrer depuis le réseau.</para>
<para>Noter que si l'on a réalisé l'un ou l'autre des exemples précédents, on doit
nettoyer le répertoire de travail avec la commande
<filename>lh_clean</filename> de l'assistant:</para>
<screen>$ lh_clean --binary</screen>
<para>Exécuter la commande <filename>lh_config</filename>de l'assistant avec les
paramètres suivants pour configurer l'arborescence
<filename>"config/"</filename> afin de créer une image pour un démarrage
réseau:</para>
<screen>$ lh_config -b net --net-root-path "/srv/debian-live" --net-root-server "192.168.0.1"</screen>
<para>A l'inverse des images USB/HDD ou ISO, le démarrage depuis le réseau ne
permet pas de donner une image de système de fichiers au client, les
fichiers doivents être fournis par NFS. Les options
<replaceable>net-root-path</replaceable> et
<replaceable>net-root-server</replaceable> spécifient respectivement
l'emplacement et le serveur NFS où trouver l'image du système de fichiers
pendant la phase de démarrage.</para>
<para>Maintenant construire l'image avec la commande <filename>lh_build</filename>
de l'assistant</para>
<screen># lh_build</screen>
<para>Lors d'un démarrage réseau, le client exécute un petit morceau de code
habituellement sur l' <acronym>EEPROM</acronym> de la carte Ethernet, qui envoie une requête  <abbrev>DHCP</abbrev> pour obtenir une adresse  <abbrev>IP</abbrev> ainsi que des informations sur ce qui doit être fait après; comme obtenir
(via le protocole  <abbrev>TFTP</abbrev> ) un logiciel de démarrage de plus haut niveau comme
<application>Grub</application> ou <application>PXLINUX</application>, ou
directement un système d'exploitation comme
<application>Linux</application>.</para>
<para>Par exemple, vous pouvez extraire l'archive
<filename>binary-net.tar.gz</filename> dans le
répertoire<filename>/srv/debian-live</filename>; vous aurez l'image du
système de fichiers dans le fichier
<filename>live/filesystem.squashfs</filename>, le noyau, initrd et le
chargeur de démarrage PXE Linux dans le
répertoire<filename>tftpboot/debian-live/i386</filename>.</para>
<para>Nous devons maintenant configurer trois services sur le serveur:</para>

<variablelist>
<varlistentry>
<term>Le serveur DHCP</term>
<listitem>
<para>Nous devons configurer le serveur DHCP de notre réseau pour être sure de
délivrer une <abbrev>IP</abbrev> adresse à l'ordinateur qui démarre depuis le réseau et pour publier
l'emplacement du programme de démarrage PXE.</para>
<para>Voici un exemple dont on peut s'inspirer, écrit pour le serveur ISC DHCP
(paquet <literal>dhcp3-server</literal>) dans le fichier de configuration
<filename>/etc/dhcp3/dhcpd.conf</filename>:</para>
<screen>
# Options DHCP spécifiques à Pxelinux:
option space pxelinux;
option pxelinux.magic      code 208 = string;
option pxelinux.configfile code 209 = text;
option pxelinux.pathprefix code 210 = text;
option pxelinux.reboottime code 211 = unsigned integer 32;


subnet 192.168.1.0 netmask 255.255.255.0 {   # 192.168.1.0/24

  # IP addresses available for guests
  range 192.168.1.100 192.168.1.149;

  # allow booting from the net
  allow bootp;

  # for net booting, server where the first file to be loaded (by TFTP
  # protocol) ("filename" following definition) lies : so the TFTP
  # server's name.
  next-server myserver;

  # net boot configuration for guests with a PXE client :
  if substring (option vendor-class-identifier, 0, 9) = "PXEClient" {
    # Note : all files for PXE are relatives to the TFTP server's root
    # path, as usually defined in /etc/inetd.conf.

    # PXE boot loader (first program to be loaded, by TFTP)
    filename "pxelinux.0";

    # describe some specific pxelinux's options through DHCP options :
    site-option-space "pxelinux";
    option pxelinux.magic f1:00:74:7e;
    if exists dhcp-parameter-request-list {
      # Always send the PXELINUX options (specified in hexadecimal)
      option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list,d0,d1,d2,d3);
    }

    # For a PXE boot menu, different versions are available : simple
    # text, text with curses, graphic (VESA)
    #option pxelinux.configfile "pxelinux/config_simple";
    #option pxelinux.configfile "pxelinux/config_curses";
    option pxelinux.configfile "pxelinux/config_vesa";

    # automatically reboot after 10 minutes of no activity
    option pxelinux.reboottime 600;
  }
}
</screen>
</listitem>
</varlistentry>

<varlistentry>
<term>Serveur TFTPd</term>
<listitem>
<para>Il fournit le noyau et la ramdisk initiale au système pendant l'e</para>
<para>Vous devriez installer le paquet <command>tftpd-hpa</command>. Il peut
fournir tous les fichiers contenus dans un répertoire racine, habituellement
<filename>/var/lib/tftpboot/</filename>, défini par l'option <option>-s</option> Pour lui faire fournir les fichiers contenus dans
<filename>/srv/debian-live/tftpboot</filename>, modifier sa commande de
démarrage dans  <filename>/etc/inetd.conf</filename> par:
<screen>tftp           dgram   udp     wait    root  /usr/sbin/in.tftpd /usr/sbin/in.tftpd -s /srv/debian-live/tftpboot -r blksize -v -v</screen>
et relancer le super server avec <command>/etc/init.d/openbsd-inetd
reload</command>.
</para>
</listitem>
</varlistentry>

<varlistentry><term>Serveur NFS</term>
<listitem>
<para>Une fois que la machine cliente a téléchargé et démarré le noyau Linux et sa
ramdisk, elle essaie de monter l'image du système de fichiers Live via un
serveur NFS.</para>
<para>Vous devriez installer le paquet <command>nfs-kernel-server</command>
--<command>nfs-user-server</command> ne fonctionne pas correctement pour le
démarrage réseau.</para>
<para>Après, rendez le répertoire de l'image du système de fichiers disponible via
NFS en ajoutant au fichier <filename>/etc/exports</filename>:</para>
<screen>/srv/debian-live *(ro,async,subtree_check,no_root_squash)</screen>
<para>informez le serveur NFS en tapant la commande suivante:</para>
<screen># exportfs -rv</screen>
</listitem>
</varlistentry>

</variablelist>

<para>Configurer tout ces services peut être source d'erreurs, vous aurez besoin
de patience pour qu'il fonctionnent tous ensemble.</para>
</section>
</sect1>
